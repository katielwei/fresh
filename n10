from random import *
import numpy as np

#N=10
mean10earning=([])
sum10earning=([])
coins = np.array([1,2,3,4,5,6,7,8,9,10])

#repeat this 500000000000000 times

while len(mean10earning)<500000000000000:
    shuffle(coins)
    earning=([coins[0]],[abs(coins[0]-coins[1])],[abs(coins[1]-coins[2])],[abs(coins[2]-coins[3])],[abs(coins[3]-coins[4])],[abs(coins[4]-coins[5])],[abs(coins[5]-coins[6])],[abs(coins[6]-coins[7])],[abs(coins[7]-coins[8])],[abs(coins[8]-coins[9])])
    np.mean(earning)
    sum10earning.extend([np.sum(earning)])
    mean10earning.extend([np.mean(earning)])

#mean of total payment for 10 coins
np.mean(mean10earning)

#standard deviation of total payment for 10 coins
np.std(mean10earning)

#probability of total payment greater or equal to 45 for 10 coins
from __future__ import division
sum10earningover45 = [i for i in sum10earning if i >= 45]
len(sum10earningover45)/len(mean10earning)

